basePath: /api/
definitions:
  domain.Booking:
    properties:
      created_at:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: integer
      master_style_type_id:
        type: integer
      time:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  domain.BookingByIdRes:
    properties:
      data:
        $ref: '#/definitions/domain.Booking'
      message:
        type: string
      status:
        type: integer
    type: object
  domain.BookingListRes:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.BookingResponse'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/domain.MetaModel'
      status:
        type: integer
    type: object
  domain.BookingResponse:
    properties:
      created_at:
        type: string
      date:
        type: string
      id:
        type: integer
      master:
        type: string
      style_type:
        type: string
      time:
        type: string
      updated_at:
        type: string
    type: object
  domain.CreateAccountPayload:
    properties:
      password:
        maxLength: 72
        minLength: 4
        type: string
      phone:
        maxLength: 20
        minLength: 4
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - password
    - phone
    - username
    type: object
  domain.CreateBookingPayload:
    properties:
      date:
        type: string
      description:
        type: string
      master_style_type_id:
        type: integer
      time:
        type: string
      user_id:
        type: integer
    type: object
  domain.CreateBookingRes:
    properties:
      data:
        $ref: '#/definitions/domain.Booking'
      message:
        type: string
      status:
        type: integer
    type: object
  domain.CreateMasterPayload:
    properties:
      firstname:
        maxLength: 20
        minLength: 3
        type: string
      lastname:
        maxLength: 50
        type: string
      offer_style_ids:
        items:
          type: integer
        type: array
      phone:
        type: string
    required:
    - firstname
    - offer_style_ids
    - phone
    type: object
  domain.CreateMasterRes:
    properties:
      data:
        $ref: '#/definitions/domain.Master'
      message:
        type: string
      status:
        type: integer
    type: object
  domain.CreateMasterUnavailablePayload:
    properties:
      date:
        type: string
      day_of_week:
        type: integer
      end_time:
        type: string
      master_id:
        type: integer
      start_time:
        type: string
    required:
    - master_id
    type: object
  domain.CreateStyleTypePayload:
    properties:
      description:
        maxLength: 50
        type: string
      duration:
        type: integer
      name:
        type: string
    type: object
  domain.CreateStyleTypeRes:
    properties:
      data:
        $ref: '#/definitions/domain.StyleType'
      message:
        type: string
      status:
        type: integer
    type: object
  domain.Credential:
    properties:
      access_token:
        type: string
      id:
        type: integer
    type: object
  domain.LoginPayload:
    properties:
      password:
        maxLength: 72
        minLength: 4
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  domain.LoginRes:
    properties:
      data:
        $ref: '#/definitions/domain.Credential'
      message:
        type: string
      status:
        type: integer
    type: object
  domain.Master:
    properties:
      created_at:
        type: string
      firstname:
        maxLength: 20
        minLength: 3
        type: string
      id:
        type: integer
      lastname:
        maxLength: 50
        type: string
      offer_style_ids:
        items:
          type: integer
        type: array
      phone:
        type: string
      status:
        type: string
      updated_at:
        type: string
    required:
    - firstname
    - offer_style_ids
    - status
    type: object
  domain.MasterListRes:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.Master'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/domain.MetaModel'
      status:
        type: integer
    type: object
  domain.MasterRes:
    properties:
      data:
        $ref: '#/definitions/domain.Master'
      message:
        type: string
      status:
        type: integer
    type: object
  domain.MasterStyleOffer:
    properties:
      id:
        type: integer
      name:
        type: string
      style_type_id:
        type: integer
    type: object
  domain.MasterStyleOfferRes:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.MasterStyleOffer'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  domain.MasterStyleType:
    properties:
      created_at:
        type: string
      id:
        type: integer
      master_id:
        type: integer
      style_type_id:
        type: integer
      updated_at:
        type: string
    type: object
  domain.MasterStyleTypeByIdRes:
    properties:
      data:
        $ref: '#/definitions/domain.MasterStyleType'
      message:
        type: string
      status:
        type: integer
    type: object
  domain.MasterStyleTypeRes:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.MasterStyleType'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  domain.MasterUnavailableRes:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.MasterUnavailableSchedule'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  domain.MasterUnavailableSchedule:
    properties:
      created_at:
        type: string
      date:
        type: string
      day_of_week:
        type: integer
      end_time:
        type: string
      id:
        type: integer
      master_id:
        type: integer
      start_time:
        type: string
      updated_at:
        type: string
    required:
    - master_id
    type: object
  domain.MetaModel:
    properties:
      page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
    type: object
  domain.SignUpRes:
    properties:
      data:
        $ref: '#/definitions/domain.User'
      message:
        type: string
      status:
        type: integer
    type: object
  domain.StyleType:
    properties:
      created_at:
        type: string
      description:
        maxLength: 50
        type: string
      duration:
        type: integer
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  domain.StyleTypeListRes:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.StyleType'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/domain.MetaModel'
      status:
        type: integer
    type: object
  domain.SuccessRes:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  domain.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      phone:
        type: string
      role_id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  domain.UserListRes:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.User'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/domain.MetaModel'
      status:
        type: integer
    type: object
  domain.UserRes:
    properties:
      data:
        $ref: '#/definitions/domain.User'
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: A comprehensive API for managing hair style booking system.
  license:
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: ChairTime API
  version: "1.0"
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in to account
      parameters:
      - description: User credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/domain.LoginPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Logged in
          schema:
            $ref: '#/definitions/domain.LoginRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Sign in to account
      tags:
      - Authentication
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create a new account
      parameters:
      - description: User credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/domain.CreateAccountPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created new account
          schema:
            $ref: '#/definitions/domain.SignUpRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create a new account
      tags:
      - Authentication
  /booking/{bookingId}:
    delete:
      consumes:
      - application/json
      description: Delete booking
      parameters:
      - description: bookingId
        in: path
        name: bookingId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Deleted booking
          schema:
            $ref: '#/definitions/domain.SuccessRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Delete booking
      tags:
      - Booking
  /booking/{id}:
    get:
      consumes:
      - application/json
      description: Get booking by id
      parameters:
      - description: booking id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Booking
          schema:
            $ref: '#/definitions/domain.BookingByIdRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get booking by id
      tags:
      - Booking
  /booking/create:
    post:
      consumes:
      - application/json
      description: Create booking
      parameters:
      - description: Booking payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/domain.CreateBookingPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created new booking
          schema:
            $ref: '#/definitions/domain.SuccessRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Create booking
      tags:
      - Booking
  /booking/update:
    put:
      consumes:
      - application/json
      description: Update booking
      parameters:
      - description: Booking payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/domain.Booking'
      produces:
      - application/json
      responses:
        "201":
          description: Update booking
          schema:
            $ref: '#/definitions/domain.CreateBookingRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Update booking
      tags:
      - Booking
  /bookings/{user_id}:
    get:
      consumes:
      - application/json
      description: Get bookings
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Bookings
          schema:
            $ref: '#/definitions/domain.BookingListRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get bookings
      tags:
      - Booking
  /file/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload a file
      parameters:
      - description: File to upload
        in: formData
        name: profile_image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.SuccessRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Upload a file
      tags:
      - File
  /master-style-type/{master_style_type_id}:
    get:
      consumes:
      - application/json
      description: Get masterStyleType by id
      parameters:
      - description: master_style_type_id
        in: path
        name: master_style_type_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: MasterStyleType info
          schema:
            $ref: '#/definitions/domain.MasterStyleTypeByIdRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get masterStyleType by id
      tags:
      - MasterStyleType
  /master-style-types:
    get:
      consumes:
      - application/json
      description: Get masterStyleTypes
      produces:
      - application/json
      responses:
        "201":
          description: MasterStyleTypes
          schema:
            $ref: '#/definitions/domain.MasterStyleTypeRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get masterStyleTypes
      tags:
      - MasterStyleType
  /master/{master_id}:
    get:
      consumes:
      - application/json
      description: Get master by id
      parameters:
      - description: master_id
        in: path
        name: master_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Master info
          schema:
            $ref: '#/definitions/domain.MasterRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get master by id
      tags:
      - Master
  /master/{master_id}/styles-offer:
    get:
      consumes:
      - application/json
      description: Get master styles offer
      parameters:
      - description: master_id
        in: path
        name: master_id
        required: true
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: page_size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Master style offer list
          schema:
            $ref: '#/definitions/domain.MasterStyleOfferRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get master styles offer
      tags:
      - Master
  /master/{unavailable_schedule_id}:
    delete:
      consumes:
      - application/json
      description: Delete master unavailable schedule
      parameters:
      - description: unavailable_schedule_id
        in: path
        name: unavailable_schedule_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Deleted master unavailable schedule
          schema:
            $ref: '#/definitions/domain.SuccessRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Delete master unavailable schedule
      tags:
      - Master
  /master/create:
    post:
      consumes:
      - application/json
      description: Create master
      parameters:
      - description: Master payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/domain.CreateMasterPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created new master
          schema:
            $ref: '#/definitions/domain.CreateMasterRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Create master
      tags:
      - Master
  /master/unavailable:
    post:
      consumes:
      - application/json
      description: Create unavailable schedule
      parameters:
      - description: Master unavailable schedule payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/domain.CreateMasterUnavailablePayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created new unavailable schedule
          schema:
            $ref: '#/definitions/domain.SuccessRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Create unavailable schedule
      tags:
      - Master
  /master/unavailables/{master_id}:
    get:
      consumes:
      - application/json
      description: Get master unavailable schedules
      parameters:
      - description: master_id
        in: path
        name: master_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Master list
          schema:
            $ref: '#/definitions/domain.MasterUnavailableRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get master unavailable schedules
      tags:
      - Master
  /master/update:
    put:
      consumes:
      - application/json
      description: Update master
      parameters:
      - description: master payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/domain.Master'
      produces:
      - application/json
      responses:
        "201":
          description: Update master
          schema:
            $ref: '#/definitions/domain.CreateMasterRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Update master
      tags:
      - Master
  /masters:
    get:
      consumes:
      - application/json
      description: Get masters
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: page_size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Master list
          schema:
            $ref: '#/definitions/domain.MasterListRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get masters
      tags:
      - Master
  /style-type/create:
    post:
      consumes:
      - application/json
      description: Create new style type
      parameters:
      - description: Create styleType payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/domain.CreateStyleTypePayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created new styleType
          schema:
            $ref: '#/definitions/domain.CreateStyleTypeRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Create new style type
      tags:
      - StyleType
  /style-types:
    get:
      consumes:
      - application/json
      description: Get style types
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: page_size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: StyleType list
          schema:
            $ref: '#/definitions/domain.StyleTypeListRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get style types
      tags:
      - StyleType
  /user/{user_id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Deleted user
          schema:
            $ref: '#/definitions/domain.SuccessRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: User info
          schema:
            $ref: '#/definitions/domain.UserRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get user by id
      tags:
      - User
  /users:
    get:
      consumes:
      - application/json
      description: Get users
      produces:
      - application/json
      responses:
        "201":
          description: Users
          schema:
            $ref: '#/definitions/domain.UserListRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get users
      tags:
      - User
schemes:
- http
- https
securityDefinitions:
  JWT:
    description: JWT security accessToken. Please add it in the format "Bearer {AccessToken}"
      to authorize your requests.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
