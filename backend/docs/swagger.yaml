basePath: /api/
definitions:
  domain.CreateMasterPayload:
    properties:
      firstname:
        maxLength: 20
        minLength: 3
        type: string
      lastname:
        maxLength: 50
        type: string
      offer_style_ids:
        items:
          type: integer
        type: array
      phone:
        type: string
    required:
    - firstname
    - offer_style_ids
    - phone
    type: object
  domain.CreateMasterRes:
    properties:
      data:
        $ref: '#/definitions/domain.Master'
      message:
        type: string
      status:
        type: integer
    type: object
  domain.CreateStyleTypePayload:
    properties:
      description:
        maxLength: 50
        type: string
      duration:
        type: integer
      name:
        type: string
    type: object
  domain.CreateStyleTypeRes:
    properties:
      data:
        $ref: '#/definitions/domain.StyleType'
      message:
        type: string
      status:
        type: integer
    type: object
  domain.Credential:
    properties:
      access_token:
        type: string
      id:
        type: integer
    type: object
  domain.LoginPayload:
    properties:
      password:
        maxLength: 72
        minLength: 4
        type: string
      phone:
        maxLength: 20
        minLength: 4
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - password
    - phone
    - username
    type: object
  domain.LoginRes:
    properties:
      data:
        $ref: '#/definitions/domain.Credential'
      message:
        type: string
      status:
        type: integer
    type: object
  domain.Master:
    properties:
      created_at:
        type: string
      firstname:
        maxLength: 20
        minLength: 3
        type: string
      id:
        type: integer
      lastname:
        maxLength: 50
        type: string
      phone:
        type: string
      updated_at:
        type: string
    required:
    - firstname
    type: object
  domain.MasterListRes:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.Master'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/domain.MetaModel'
      status:
        type: integer
    type: object
  domain.MasterStyleOffer:
    properties:
      id:
        type: integer
      name:
        type: string
      style_type_id:
        type: integer
    type: object
  domain.MasterStyleOfferRes:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.MasterStyleOffer'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  domain.MetaModel:
    properties:
      page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
    type: object
  domain.SignUpRes:
    properties:
      data:
        $ref: '#/definitions/domain.User'
      message:
        type: string
      status:
        type: integer
    type: object
  domain.StyleType:
    properties:
      created_at:
        type: string
      description:
        maxLength: 50
        type: string
      duration:
        type: integer
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  domain.StyleTypeListRes:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.StyleType'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/domain.MetaModel'
      status:
        type: integer
    type: object
  domain.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      phone:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: A comprehensive API for managing hair style booking system.
  license:
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: ChairTime API
  version: "1.0"
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in to account
      parameters:
      - description: User credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/domain.LoginPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Logged in
          schema:
            $ref: '#/definitions/domain.LoginRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Sign in to account
      tags:
      - authentication
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create a new account
      parameters:
      - description: User credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/domain.LoginPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created new account
          schema:
            $ref: '#/definitions/domain.SignUpRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create a new account
      tags:
      - authentication
  /create-master:
    post:
      consumes:
      - application/json
      description: Create master
      parameters:
      - description: Master payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/domain.CreateMasterPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created new master
          schema:
            $ref: '#/definitions/domain.CreateMasterRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Create master
      tags:
      - master
  /create-style-type:
    post:
      consumes:
      - application/json
      description: Create new style type
      parameters:
      - description: Create styleType payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/domain.CreateStyleTypePayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created new styleType
          schema:
            $ref: '#/definitions/domain.CreateStyleTypeRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Create new style type
      tags:
      - styleType
  /master/{master_id}/styles-offer:
    get:
      consumes:
      - application/json
      description: Get master styles offer
      parameters:
      - description: master_id
        in: path
        name: master_id
        required: true
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: page_size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Master style offer list
          schema:
            $ref: '#/definitions/domain.MasterStyleOfferRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get master styles offer
      tags:
      - master
  /masters:
    get:
      consumes:
      - application/json
      description: Get masters
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: page_size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Master list
          schema:
            $ref: '#/definitions/domain.MasterListRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get masters
      tags:
      - master
  /style-types:
    get:
      consumes:
      - application/json
      description: Get style types
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: page_size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: StyleType list
          schema:
            $ref: '#/definitions/domain.StyleTypeListRes'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - JWT: []
      summary: Get style types
      tags:
      - styleType
schemes:
- http
- https
securityDefinitions:
  JWT:
    description: JWT security accessToken. Please add it in the format "Bearer {AccessToken}"
      to authorize your requests.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
