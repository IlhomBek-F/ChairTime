{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A comprehensive API for managing hair style booking system.",
        "title": "ChairTime API",
        "contact": {},
        "license": {
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/",
    "paths": {
        "/auth/sign-in": {
            "post": {
                "description": "Sign in to account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign in to account",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.LoginPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Logged in",
                        "schema": {
                            "$ref": "#/definitions/domain.LoginRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Create a new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.LoginPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created new account",
                        "schema": {
                            "$ref": "#/definitions/domain.SignUpRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/booking/create": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Create booking",
                "parameters": [
                    {
                        "description": "Booking payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateBookingPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created new booking",
                        "schema": {
                            "$ref": "#/definitions/domain.SuccessRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/booking/update": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Update booking",
                "parameters": [
                    {
                        "description": "Booking payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Booking"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Update booking",
                        "schema": {
                            "$ref": "#/definitions/domain.CreateBookingRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/booking/{bookingId}": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Delete booking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bookingId",
                        "name": "bookingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Deleted booking",
                        "schema": {
                            "$ref": "#/definitions/domain.SuccessRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/booking/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get booking by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Get booking by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "booking id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Booking",
                        "schema": {
                            "$ref": "#/definitions/domain.BookingByIdRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/bookings/{user_id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get bookings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Booking"
                ],
                "summary": "Get bookings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Bookings",
                        "schema": {
                            "$ref": "#/definitions/domain.BookingListRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/master/create": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create master",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Create master",
                "parameters": [
                    {
                        "description": "Master payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateMasterPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created new master",
                        "schema": {
                            "$ref": "#/definitions/domain.CreateMasterRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/master/update": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update master",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Update master",
                "parameters": [
                    {
                        "description": "master payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Master"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Update master",
                        "schema": {
                            "$ref": "#/definitions/domain.CreateMasterRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/master/{master_id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get master by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Get master by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "master_id",
                        "name": "master_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Master info",
                        "schema": {
                            "$ref": "#/definitions/domain.MasterRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/master/{master_id}/styles-offer": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get master styles offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Get master styles offer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "master_id",
                        "name": "master_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page_size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Master style offer list",
                        "schema": {
                            "$ref": "#/definitions/domain.MasterStyleOfferRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/masters": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get masters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Get masters",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page_size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Master list",
                        "schema": {
                            "$ref": "#/definitions/domain.MasterListRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/style-type/create": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create new style type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StyleType"
                ],
                "summary": "Create new style type",
                "parameters": [
                    {
                        "description": "Create styleType payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateStyleTypePayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created new styleType",
                        "schema": {
                            "$ref": "#/definitions/domain.CreateStyleTypeRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/style-types": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get style types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StyleType"
                ],
                "summary": "Get style types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page_size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "StyleType list",
                        "schema": {
                            "$ref": "#/definitions/domain.StyleTypeListRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/user/{user_id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User info",
                        "schema": {
                            "$ref": "#/definitions/domain.UserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Deleted user",
                        "schema": {
                            "$ref": "#/definitions/domain.SuccessRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get users",
                "responses": {
                    "201": {
                        "description": "Users",
                        "schema": {
                            "$ref": "#/definitions/domain.UserListRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Booking": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "master_style_type_id": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "domain.BookingByIdRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.Booking"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.BookingListRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.BookingResponse"
                    }
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/domain.MetaModel"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.BookingResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "master": {
                    "type": "string"
                },
                "style_type": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.CreateBookingPayload": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "master_style_type_id": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "domain.CreateBookingRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.Booking"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.CreateMasterPayload": {
            "type": "object",
            "required": [
                "firstname",
                "offer_style_ids",
                "phone"
            ],
            "properties": {
                "firstname": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "lastname": {
                    "type": "string",
                    "maxLength": 50
                },
                "offer_style_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "domain.CreateMasterRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.Master"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.CreateStyleTypePayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 50
                },
                "duration": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.CreateStyleTypeRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.StyleType"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.Credential": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "domain.LoginPayload": {
            "type": "object",
            "required": [
                "password",
                "phone",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 4
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 4
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                }
            }
        },
        "domain.LoginRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.Credential"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.Master": {
            "type": "object",
            "required": [
                "firstname",
                "offer_style_ids"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "id": {
                    "type": "integer"
                },
                "lastname": {
                    "type": "string",
                    "maxLength": 50
                },
                "offer_style_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.MasterListRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Master"
                    }
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/domain.MetaModel"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.MasterRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.Master"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.MasterStyleOffer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "style_type_id": {
                    "type": "integer"
                }
            }
        },
        "domain.MasterStyleOfferRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.MasterStyleOffer"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.MetaModel": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "domain.SignUpRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.User"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.StyleType": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 50
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.StyleTypeListRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.StyleType"
                    }
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/domain.MetaModel"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.SuccessRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "domain.UserListRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.User"
                    }
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/domain.MetaModel"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "domain.UserRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.User"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "description": "JWT security accessToken. Please add it in the format \"Bearer {AccessToken}\" to authorize your requests.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}